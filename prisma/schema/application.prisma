enum FeeStatus {
  HOME
  OVERSEAS
  UNKNOWN
}

enum WP {
  YES
  NO
  NOT_CALCULATED
}

enum NextAction {
  ADMIN_SCORING_MISSING_TMUA
  ADMIN_SCORING_WITH_TMUA
  PENDING_TMUA
  REVIEWER_SCORING
  UG_TUTOR_REVIEW
  INFORM_CANDIDATE
  CANDIDATE_INFORMED
}

enum GCSEQualification {
  GCSE
  INDIAN_X
  MALAYSIAN
  SINGAPORE
  OTHER
}

enum AlevelQualification {
  A_LEVEL
  INDIAN_XII
  MALAYSIAN
  SINGAPORE
  ROMANIAN
  OTHER
}

model Application {
  id                       Int                  @id @default(autoincrement())
  applicant                Applicant            @relation(fields: [cid], references: [cid])
  cid                      String
  admissionsCycle          Int
  applicationDate          DateTime
  wideningParticipation    WP                   @default(NOT_CALCULATED)
  feeStatus                FeeStatus
  tmuaScore                Decimal?             @db.Decimal(2, 1)
  /// gcseQualification is an enum that corresponds to age 16, GCSE-equivalent qualification type
  gcseQualification        GCSEQualification?
  gcseQualificationScore   Decimal?             @db.Decimal(3, 1)
  /// aLevelQualification is an enum that corresponds to age 18, A-Level-equivalent qualification type
  aLevelQualification      AlevelQualification?
  aLevelQualificationScore Decimal?             @db.Decimal(3, 1)
  extenuatingCircumstances String?
  academicEligibilityNotes String?
  /// internalReview contains all scores and comments from admins, reviewers and UG tutors
  internalReview           InternalReview?
  /// nextAction is an enum referring to the action pending completion for the application to progress
  nextAction               NextAction           @default(ADMIN_SCORING_MISSING_TMUA)
  reviewer                 User?                @relation(fields: [reviewerId], references: [id])
  reviewerId               Int?
  outcomes                 Outcome[]

  @@unique([admissionsCycle, cid])
}

model InternalReview {
  id                           Int         @id @default(autoincrement())
  application                  Application @relation(fields: [applicationId], references: [id])
  applicationId                Int         @unique
  motivationAdminScore         Decimal?    @db.Decimal(3, 1)
  extracurricularAdminScore    Decimal?    @db.Decimal(3, 1)
  examComments                 String?
  lastAdminEditBy              String?
  lastAdminEditOn              DateTime?
  motivationReviewerScore      Decimal?    @db.Decimal(3, 1)
  extracurricularReviewerScore Decimal?    @db.Decimal(3, 1)
  referenceReviewerScore       Decimal?    @db.Decimal(3, 1)
  academicComments             String?
  lastReviewerEditOn           DateTime?
  generalComments              Comment[]
}
